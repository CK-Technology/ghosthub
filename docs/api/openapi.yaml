openapi: 3.0.3
info:
  title: GhostHub API
  version: 1.0.0
  description: |
    GhostHub MSP Management Platform API
    
    GhostHub is a comprehensive Managed Service Provider (MSP) management platform
    built with Rust and WebAssembly. This API provides endpoints for managing
    clients, tickets, assets, integrations, and more.
    
    ## Authentication
    
    The API uses JWT Bearer tokens for authentication. Include the token in the
    Authorization header:
    
    ```
    Authorization: Bearer <your-jwt-token>
    ```
    
    ## Rate Limiting
    
    - General API: 100 requests per minute
    - Authentication: 10 requests per minute
    - File uploads: 5 requests per minute
    
  contact:
    name: GhostHub Support
    url: https://github.com/ghostkellz/ghosthub
    email: support@ghosthub.sh
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html

servers:
  - url: https://api.ghosthub.com/v1
    description: Production API
  - url: http://localhost:8080/api/v1
    description: Development API

security:
  - BearerAuth: []

paths:
  # Authentication endpoints
  /auth/login:
    post:
      tags: [Authentication]
      summary: Login user
      description: Authenticate user and return JWT token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/register:
    post:
      tags: [Authentication]
      summary: Register new user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/me:
    get:
      tags: [Authentication]
      summary: Get current user
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  # Client endpoints
  /clients:
    get:
      tags: [Clients]
      summary: List clients
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: search
          in: query
          schema:
            type: string
          description: Search clients by name or email
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, suspended]
      responses:
        '200':
          description: List of clients
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Client'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Clients]
      summary: Create client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientRequest'
      responses:
        '201':
          description: Client created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'

  /clients/{id}:
    parameters:
      - $ref: '#/components/parameters/ClientId'
    get:
      tags: [Clients]
      summary: Get client by ID
      responses:
        '200':
          description: Client details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '404':
          description: Client not found

    put:
      tags: [Clients]
      summary: Update client
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientRequest'
      responses:
        '200':
          description: Client updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'

    delete:
      tags: [Clients]
      summary: Delete client
      responses:
        '204':
          description: Client deleted

  # Microsoft 365 endpoints
  /m365/tenants:
    get:
      tags: [Microsoft 365]
      summary: List M365 tenants
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: client_id
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of M365 tenants
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/M365Tenant'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

    post:
      tags: [Microsoft 365]
      summary: Create M365 tenant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateM365TenantRequest'
      responses:
        '201':
          description: Tenant created

  /m365/tenants/{id}/sync:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags: [Microsoft 365]
      summary: Sync M365 tenant
      responses:
        '200':
          description: Sync started
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenant_id:
                    type: string
                    format: uuid
                  sync_started:
                    type: string
                    format: date-time
                  estimated_duration:
                    type: string

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    Limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      description: Number of items to return

    Offset:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
        default: 0
      description: Number of items to skip

    ClientId:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: Client ID

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        first_name:
          type: string
        last_name:
          type: string
        role:
          type: string
          enum: [admin, manager, technician, readonly]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8

    LoginResponse:
      type: object
      properties:
        token:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: integer
        user:
          $ref: '#/components/schemas/User'

    RegisterRequest:
      type: object
      required: [email, password, first_name, last_name]
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        first_name:
          type: string
        last_name:
          type: string
        role:
          type: string
          enum: [manager, technician, readonly]
          default: technician

    Client:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        identifier:
          type: string
        primary_contact_email:
          type: string
          format: email
        primary_contact_phone:
          type: string
        status:
          type: string
          enum: [active, inactive, suspended]
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        website:
          type: string
          format: uri
        notes:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateClientRequest:
      type: object
      required: [name, primary_contact_email]
      properties:
        name:
          type: string
        identifier:
          type: string
        primary_contact_email:
          type: string
          format: email
        primary_contact_phone:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        website:
          type: string
          format: uri
        notes:
          type: string

    UpdateClientRequest:
      type: object
      properties:
        name:
          type: string
        primary_contact_email:
          type: string
          format: email
        primary_contact_phone:
          type: string
        address:
          type: string
        city:
          type: string
        state:
          type: string
        zip_code:
          type: string
        country:
          type: string
        website:
          type: string
          format: uri
        notes:
          type: string

    M365Tenant:
      type: object
      properties:
        id:
          type: string
          format: uuid
        client_id:
          type: string
          format: uuid
        tenant_id:
          type: string
        tenant_name:
          type: string
        domain_name:
          type: string
        status:
          type: string
          enum: [active, inactive, error]
        sync_enabled:
          type: boolean
        last_sync:
          type: string
          format: date-time
        total_licenses:
          type: integer
        assigned_licenses:
          type: integer
        available_licenses:
          type: integer
        mfa_required:
          type: boolean
        created_at:
          type: string
          format: date-time

    CreateM365TenantRequest:
      type: object
      required: [client_id, tenant_id, tenant_name, domain_name]
      properties:
        client_id:
          type: string
          format: uuid
        tenant_id:
          type: string
        tenant_name:
          type: string
        domain_name:
          type: string
        client_id_encrypted:
          type: string
        client_secret_encrypted:
          type: string
        sync_enabled:
          type: boolean
          default: true

    Pagination:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
        has_more:
          type: boolean

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
        timestamp:
          type: string
          format: date-time
        path:
          type: string

tags:
  - name: Authentication
    description: User authentication and authorization
  - name: Clients
    description: Client and contact management
  - name: Tickets
    description: Support ticket management
  - name: Assets
    description: IT asset and infrastructure management
  - name: Microsoft 365
    description: Microsoft 365 tenant integration and management
  - name: Azure
    description: Azure subscription and resource monitoring
  - name: Bitwarden
    description: Bitwarden/Vaultwarden password management integration
  - name: Network
    description: Network infrastructure management
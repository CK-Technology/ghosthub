# Working GhostHub Demo - Fully Containerized
version: '3.9'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: ghosthub_demo_db
    environment:
      POSTGRES_DB: ghosthub
      POSTGRES_USER: ghosthub
      POSTGRES_PASSWORD: ghosthub
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/demo-init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ghosthub"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - ghosthub

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ghosthub_demo_redis
    volumes:
      - redis_data:/data
    networks:
      - ghosthub

  # Demo API Server (Python)
  api:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: ghosthub_demo_api
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      FLASK_ENV: development
    networks:
      - ghosthub

  # Simple Frontend (Nginx serving static demo page)
  web:
    image: nginx:alpine
    container_name: ghosthub_demo_web
    ports:
      - "8080:80"
    volumes:
      - ./demo-web:/usr/share/nginx/html:ro
      - ./nginx-demo.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api
    networks:
      - ghosthub

networks:
  ghosthub:
    driver: bridge

volumes:
  postgres_data:
  redis_data: